[{"C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\index.js":"1","C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\App.js":"3","C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\components\\Home\\AllPlayers.component.js":"4","C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\components\\Home\\SelectedPlayer.component.js":"5","C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\components\\Bet\\BetingTable.component.js":"6","C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\components\\Home\\Home.component.js":"7","C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\redux\\store.redux.js":"8","C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\redux\\reducers\\players.reducer.js":"9","C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\redux\\types.redux.js":"10","C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\redux\\actions\\players.action.js":"11"},{"size":500,"mtime":1606304037659,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1606304037659,"results":"14","hashOfConfig":"13"},{"size":675,"mtime":1610444549054,"results":"15","hashOfConfig":"13"},{"size":9662,"mtime":1610707599224,"results":"16","hashOfConfig":"13"},{"size":2869,"mtime":1610707280780,"results":"17","hashOfConfig":"13"},{"size":4600,"mtime":1610709167834,"results":"18","hashOfConfig":"13"},{"size":610,"mtime":1610193662196,"results":"19","hashOfConfig":"13"},{"size":530,"mtime":1610444565030,"results":"20","hashOfConfig":"13"},{"size":2794,"mtime":1610709167769,"results":"21","hashOfConfig":"13"},{"size":272,"mtime":1610564931953,"results":"22","hashOfConfig":"13"},{"size":2016,"mtime":1610709181061,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1mbgcq4",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\index.js",[],["49","50"],"C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\App.js",[],"C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\components\\Home\\AllPlayers.component.js",["51","52","53"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getAllPlayer, selectPlayer, removePlayer } from '../../redux/actions/players.action';\r\n\r\nexport class AllPlayers extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            page: 1,\r\n            limit: 10,\r\n            total_page: '',\r\n            ascending: true,\r\n            property: ''\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.props.players.players === null) {\r\n            this.props.getAllPlayer(this.state.page, this.state.limit);\r\n        }\r\n\r\n    }\r\n\r\n    afterData = () => {\r\n        let totalPage = new Promise((resolve, reject) => {\r\n            if (this.props.players.players !== null && !this.props.players.loading) {\r\n                resolve();\r\n            }\r\n        })\r\n        totalPage.then(() => {\r\n            this.setState({ total_page: (this.props.players.total_player / this.state.limit) })\r\n        })\r\n    }\r\n\r\n    prevPage = () => {\r\n        console.log('prev');\r\n        if (this.state.page > 1) {\r\n            this.setState({ page: this.state.page - 1 })\r\n        }\r\n        this.afterData()\r\n    }\r\n\r\n    nextPage = () => {\r\n        console.log('next');\r\n        if (this.state.page < this.state.total_page) {\r\n            this.setState({ page: this.state.page + 1 })\r\n        }\r\n        this.afterData()\r\n    }\r\n\r\n    sortByProperty = (prop, asc) => {\r\n        return function (a, b) {\r\n            if (asc) {\r\n                return (parseInt(a[prop]) > parseInt(b[prop])) ? 1 : ((parseInt(a[prop]) < parseInt(b[prop])) ? -1 : 0);\r\n            } else {\r\n                return (parseInt(b[prop]) > parseInt(a[prop])) ? 1 : ((parseInt(b[prop]) < parseInt(a[prop])) ? -1 : 0);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    ascending_de = (e, property) => {\r\n        this.setState({ ascending: !this.state.ascending, property: property })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { players, loading, selected_player } = this.props.players\r\n        let startIndex = (this.state.page - 1) * this.state.limit;\r\n        let endIndex = this.state.page * this.state.limit;\r\n\r\n        let playersRow;\r\n        if (players === null || loading) {\r\n            playersRow = (<h1>loading</h1>)\r\n        } else {\r\n            if (players) {\r\n                if (players.length > 0) {\r\n                    players.sort(this.sortByProperty(this.state.property, this.state.ascending))\r\n                    let sortedPlayer = players.slice(startIndex, endIndex)\r\n                    playersRow = sortedPlayer.map((player) => (\r\n                        <AllPlayerRow player={player} selectPlayer={this.props.selectPlayer} selected_player={selected_player} removePlayer={this.props.removePlayer} />\r\n                    ))\r\n                }\r\n            }\r\n            else {\r\n                playersRow = <h4>No product found...</h4>\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"all-player containerCustom\">\r\n                <div className=\"title\">Select Playing 9</div>\r\n                <div className=\"search\">\r\n                    <div className=\"input-group flex-nowrap\">\r\n                        <i className=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Player Name\" aria-label=\"player_name\" aria-describedby=\"addon-wrapping\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"table-responsive-md\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    <div>\r\n                                        <p>SELECT</p>\r\n                                    </div>\r\n                                </th>\r\n                                <th>\r\n                                    <div>\r\n                                        <p>PLAYER NAME</p>\r\n                                    </div>\r\n                                </th>\r\n                                <th>\r\n                                    <div>\r\n                                        <p>LEVEL</p>\r\n                                    </div>\r\n                                </th>\r\n                                <th>\r\n                                    <div>\r\n                                        <p>AVATAR</p>\r\n                                    </div>\r\n                                </th>\r\n                                <th onClick={e => this.ascending_de(e, 'Bet')}>\r\n                                    <div>\r\n                                        <i className=\"fas fa-dot-circle\"></i>\r\n                                        <p>BET</p>\r\n                                        <div className=\"arrow\">\r\n                                            <i className=\"fa fa-arrow-down\" hidden={this.state.property !== 'Bet' || this.state.ascending} aria-hidden=\"true\"></i>\r\n                                            <i className=\"fa fa-arrow-up\" hidden={this.state.property !== 'Bet' || !this.state.ascending} aria-hidden=\"true\"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                </th>\r\n                                <th>\r\n                                    <div>\r\n                                        <i className=\"fas fa-trophy\"></i>\r\n                                        <p>WINS</p>\r\n                                    </div>\r\n                                </th>\r\n                                <th>\r\n                                    <div>\r\n                                        <p>LOST</p>\r\n                                    </div>\r\n                                </th>\r\n                                <th onClick={e => this.ascending_de(e, 'Price')}>\r\n                                    <div>\r\n                                        <i className=\"fas fa-rupee-sign\"></i>\r\n                                        <p>PRICE</p>\r\n                                        <div className=\"arrow\">\r\n                                            <i className=\"fa fa-arrow-down\" hidden={this.state.property !== 'Price' || this.state.ascending} aria-hidden=\"true\"></i>\r\n                                            <i className=\"fa fa-arrow-up\" hidden={this.state.property !== 'Price' || !this.state.ascending} aria-hidden=\"true\"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {playersRow}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"pagination\">\r\n                    <nav aria-label=\"Page navigation example\">\r\n                        <ul className=\"pagination justify-content-end\">\r\n                            <li className=\"page-item\" onClick={this.prevPage} >\r\n                                <a className=\"page-link\" href=\"#\" >\r\n                                    <i className=\"fas fa-chevron-left\" ></i>\r\n                                </a>\r\n                            </li>\r\n                            <div className=\"page text-muted\">\r\n                                <p>{this.state.limit} of {this.props.players.total_player}</p>\r\n                            </div>\r\n                            <li className=\"page-item\" onClick={this.nextPage}>\r\n                                <a className=\"page-link\" href=\"#\" >\r\n                                    <i className=\"fas fa-chevron-right\" ></i>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction AllPlayerRow(props) {\r\n    const { player, selected_player } = props;\r\n    let profilePic = player[\"Profile Image\"]\r\n    let checked = false;\r\n    selected_player.map(a => {\r\n        if (a.Name === player.Name) {\r\n            checked = true\r\n        }\r\n    })\r\n    function setCheckboxChange(e) {\r\n        if (checked) {\r\n            let playerDetails = JSON.parse(e.target.value);\r\n            props.removePlayer(playerDetails)\r\n        } else {\r\n\r\n            if (selected_player.length < 9) {\r\n                let playerDetails = JSON.parse(e.target.value);\r\n                props.selectPlayer(playerDetails)\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <tr>\r\n            <td>\r\n                <div>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        aria-label=\"Checkbox for following text input\"\r\n                        value={JSON.stringify(player)}\r\n                        onChange={e => setCheckboxChange(e)}\r\n                        checked={checked}\r\n                    />\r\n                </div>\r\n            </td>\r\n            <td>{player.Name}</td>\r\n            <td>{player.level ? player.level : 0}</td>\r\n            <td>\r\n                <div className=\"avatar\">\r\n                    <img src={profilePic} alt=\"\" />\r\n                </div>\r\n            </td>\r\n            <td>{player.Bet}</td>\r\n            <td>{player.win ? player.win : 0}</td>\r\n            <td>{player.lost ? player.lost : 0}</td>\r\n            <td>{player.Price}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    players: state.players\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAllPlayer, selectPlayer, removePlayer })(AllPlayers);\r\n","C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\components\\Home\\SelectedPlayer.component.js",[],"C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\components\\Bet\\BetingTable.component.js",["54","55","56","57","58"],"C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\components\\Home\\Home.component.js",[],"C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\redux\\store.redux.js",[],"C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\redux\\reducers\\players.reducer.js",["59"],"import { LOADING, GET_ALL_PLAYER, CLEAR_PLAYERS, SELECT_PLAYER, REMOVE_PLAYER, BET_RESULT } from \"../types.redux\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    players: null,\r\n    total_player: 0,\r\n    selected_player: []\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case CLEAR_PLAYERS:\r\n            return {\r\n                ...state,\r\n                players: [],\r\n            }\r\n\r\n        case GET_ALL_PLAYER:\r\n            return {\r\n                ...state,\r\n                players: action.payload,\r\n                total_player: action.payload.length,\r\n                loading: false\r\n            }\r\n        case SELECT_PLAYER:\r\n            return {\r\n                ...state,\r\n                selected_player: [...state.selected_player, action.payload],\r\n                loading: false\r\n            }\r\n        case REMOVE_PLAYER:\r\n            return {\r\n                ...state,\r\n                selected_player: state.selected_player.filter(el => el.Name !== action.payload.Name),\r\n                loading: false\r\n            }\r\n\r\n        case BET_RESULT:\r\n            return {\r\n                ...state,\r\n                players: state.players.map(el => (\r\n                    // el.Name === action.payload.Name ?\r\n                    //     action.payload.winS ?\r\n                    //         { ...el, win: el.win + 1 } :\r\n                    //         { ...el, lost: el.lost + 1 } :\r\n                    //     el\r\n                    el.Name === action.payload.Name ?\r\n                        action.payload.win ?\r\n                            { ...el, win: (el.win ? el.win + 1 : 1), level: (el.level ? el.level + 1 : 1) } :\r\n                            { ...el, lost: (el.lost ? el.lost + 1 : 1), level: (el.level ? el.level + 1 : 1) } :\r\n                        el\r\n                )),\r\n                loading: false\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\redux\\types.redux.js",[],"C:\\Users\\MayurStd\\Documents\\D\\Companies\\hackerEarth\\Coda_1\\DoubleOrNothing\\frontend\\src\\redux\\actions\\players.action.js",["60","61","62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":172,"column":33,"nodeType":"69","endLine":172,"endColumn":68},{"ruleId":"67","severity":1,"message":"68","line":180,"column":33,"nodeType":"69","endLine":180,"endColumn":68},{"ruleId":"70","severity":1,"message":"71","line":197,"column":27,"nodeType":"72","messageId":"73","endLine":197,"endColumn":29},{"ruleId":"74","severity":1,"message":"75","line":2,"column":8,"nodeType":"76","messageId":"77","endLine":2,"endColumn":17},{"ruleId":"70","severity":1,"message":"71","line":26,"column":60,"nodeType":"72","messageId":"73","endLine":26,"endColumn":62},{"ruleId":"78","severity":1,"message":"79","line":28,"column":32,"nodeType":"80","messageId":"81","endLine":28,"endColumn":34},{"ruleId":"78","severity":1,"message":"79","line":85,"column":48,"nodeType":"80","messageId":"81","endLine":85,"endColumn":50},{"ruleId":"78","severity":1,"message":"79","line":112,"column":33,"nodeType":"80","messageId":"81","endLine":112,"endColumn":35},{"ruleId":"82","severity":1,"message":"83","line":10,"column":1,"nodeType":"84","endLine":65,"endColumn":2},{"ruleId":"74","severity":1,"message":"85","line":2,"column":22,"nodeType":"76","messageId":"77","endLine":2,"endColumn":35},{"ruleId":"74","severity":1,"message":"86","line":7,"column":10,"nodeType":"76","messageId":"77","endLine":7,"endColumn":24},{"ruleId":"70","severity":1,"message":"71","line":60,"column":21,"nodeType":"72","messageId":"73","endLine":60,"endColumn":23},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'CLEAR_PLAYERS' is defined but never used.","'sortByProperty' is defined but never used.","no-global-assign","no-unsafe-negation"]